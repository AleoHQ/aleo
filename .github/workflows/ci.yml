name: CI
on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'documentation/**'
      - '*.md'
      - '**/*.md'

env:
  RUST_BACKTRACE: 1

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
#    env:
#      RUSTFLAGS: -Dwarnings
    strategy:
      matrix:
        rust:
          - stable
          - nightly

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy

      - name: Check examples
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --examples --all

      - name: Check examples with all features on stable
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --examples --all-features --all
        if: matrix.rust == 'stable'

      - name: Check benchmarks on nightly
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --examples --all --benches
        if: matrix.rust == 'nightly'

  test:
    name: Test
    runs-on: ubuntu-latest
#    env:
#      RUSTFLAGS: -Dwarnings
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Check examples
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --examples --all

      - name: Check examples with all features on stable
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --examples --all-features --all
        if: matrix.rust == 'stable'

      - name: Check benchmarks on nightly
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --examples --all --benches
        if: matrix.rust == 'nightly'

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --no-fail-fast

  codecov:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --examples --all --benches --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
#          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=unwind -Zpanic_abort_tests"

      - name: grcov
        uses: actions-rs/grcov@v0.1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ steps.coverage.outputs.report }}
          yml: ./codecov.yml
          fail_ci_if_error: true
